{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface SafeAreaPlugin {\n  /**\n   * Get the Status bar height on Android and iOS, and on Web it returns 0.\n   */\n  getStatusBarHeight(): Promise<{ height: number }>;\n\n  /**\n   * Get the Safe area insets for Android and iOS, and on Web it returns 0 for all.\n   */\n  getSafeAreaInsets(): Promise<SafeAreaInset>;\n}\n\nexport interface SafeAreaInset {\n  /**\n   * Safe Area inset value at top.\n   */\n  top: number;\n  /**\n   * Safe Area inset value at bottom.\n   */\n  bottom: number;\n  /**\n   * Safe Area inset value at left.\n   */\n  left: number;\n  /**\n   * Safe Area inset value at right.\n   */\n  right: number;\n}\n\n// SafeAreaType was renamed to SafeAreaInset;\n// For backward compatibility, we'll expose the previous name too.\nexport type SafeAreaType = SafeAreaInset;\n\nexport interface SafeAreaHTMLProps {\n  /**\n   * Whether to apply safe area insets as `padding` or `margin`.\n   *\n   * default `padding`.\n   */\n  mode: 'padding' | 'margin';\n  /**\n   * Specify the edges you want to apply safe area padding on, separated by comma.\n   *\n   * For example, to apply padding only on top, left and right, `edges=\"top,left,right\"`.\n   *\n   * default to all edges.\n   */\n  edges: string;\n}\n"]}