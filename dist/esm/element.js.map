{"version":3,"file":"element.js","sourceRoot":"","sources":["../../src/element.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAEnC,MAAM,eAAgB,SAAQ,WAAW;IAIvC;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,uBAAuB;QACvB,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,MAAM,KAAK,kBAAkB;QAC3B,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,wBAAwB,CACtB,IAAY,EACZ,QAAgB,EAChB,QAAgB;QAEhB,IAAI,QAAQ,KAAK,QAAQ,EAAE;YACzB,OAAO;SACR;QACA,IAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,aAAa;;QACjB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,MAAM,aAAa,GAAG,MAAM,QAAQ,CAAC,iBAAiB,EAAE,CAAC;YAEzD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC;YACxC,MAAM,KAAK,SAAG,IAAI,CAAC,KAAK,0CAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAE9D,MAAM,MAAM,GAAG;gBACb,GAAG,EAAE,KAAK,IAAI,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG;gBAC7D,MAAM,EAAE,KAAK,IAAI,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM;gBACtE,IAAI,EAAE,KAAK,IAAI,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI;gBAChE,KAAK,EAAE,KAAK,IAAI,EAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK;aACpE,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG;;;kBAGhB,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,SAAS,MAAM,CAAC,GAAG;kBAClD,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,YAAY,MAAM,CAAC,MAAM;kBACxD,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,UAAU,MAAM,CAAC,IAAI;kBACpD,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,WAAW,MAAM,CAAC,KAAK;;;;;;WAM7D,CAAC;SACP;IACH,CAAC;CACF;AAED,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAS,EAAE;IAChD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC;QAClC,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AACxD,CAAC,CAAC","sourcesContent":["import { SafeArea } from './index';\n\nclass SafeAreaElement extends HTMLElement {\n  mode: 'padding' | 'margin';\n  edges?: string;\n\n  constructor() {\n    super();\n\n    this.mode = 'padding';\n    // Create a shadow root\n    this.attachShadow({ mode: 'open' });\n  }\n\n  connectedCallback(): void {\n    this.renderElement();\n  }\n\n  static get observedAttributes(): string[] {\n    return ['mode', 'edges'];\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string,\n  ): void {\n    if (oldValue === newValue) {\n      return;\n    }\n    (this as any)[name] = newValue;\n    this.renderElement();\n  }\n\n  async renderElement(): Promise<void> {\n    if (this.shadowRoot) {\n      const safeAreaInset = await SafeArea.getSafeAreaInsets();\n\n      const isMargin = this.mode === 'margin';\n      const edges = this.edges?.split(',').map(item => item.trim());\n\n      const insets = {\n        top: edges && !edges?.includes('top') ? 0 : safeAreaInset.top,\n        bottom: edges && !edges?.includes('bottom') ? 0 : safeAreaInset.bottom,\n        left: edges && !edges?.includes('left') ? 0 : safeAreaInset.left,\n        right: edges && !edges?.includes('right') ? 0 : safeAreaInset.right,\n      };\n\n      this.shadowRoot.innerHTML = `\n            <style>\n              #wrapper {\n                ${isMargin ? 'margin' : 'padding'}-top: ${insets.top}px;\n                ${isMargin ? 'margin' : 'padding'}-bottom: ${insets.bottom}px;\n                ${isMargin ? 'margin' : 'padding'}-left: ${insets.left}px;\n                ${isMargin ? 'margin' : 'padding'}-right: ${insets.right}px;\n              }\n            </style>\n            <div id=\"wrapper\">\n              <slot></slot>\n            </div>\n          `;\n    }\n  }\n}\n\nexport const registerSafeAreaElement = (): void => {\n  if (!customElements.get('safe-area'))\n    customElements.define('safe-area', SafeAreaElement);\n};\n"]}