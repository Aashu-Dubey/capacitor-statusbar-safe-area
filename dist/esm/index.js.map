{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAElD,OAAO,EAAE,uBAAuB,EAAE,MAAM,WAAW,CAAC;AAEpD,MAAM,QAAQ,GAAG,cAAc,CAAiB,UAAU,EAAE;IAC1D,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;CAC1D,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAE5C,cAAc,eAAe,CAAC;AAC9B,OAAO,EAAE,QAAQ,EAAE,CAAC;AACpB,OAAO,EAAE,UAAU,IAAI,kBAAkB,EAAE,CAAC;AAC5C,OAAO,EAAE,uBAAuB,EAAE,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport { SafeAreaController } from './controller';\nimport type { SafeAreaPlugin, SafeAreaHTMLProps } from './definitions';\nimport { registerSafeAreaElement } from './element';\n\nconst SafeArea = registerPlugin<SafeAreaPlugin>('SafeArea', {\n  web: () => import('./web').then(m => new m.SafeAreaWeb()),\n});\n\nconst controller = new SafeAreaController();\n\nexport * from './definitions';\nexport { SafeArea };\nexport { controller as SafeAreaController };\nexport { registerSafeAreaElement };\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace JSX {\n    export interface IntrinsicElements {\n      'safe-area': SafeAreaHTMLProps;\n    }\n  }\n}\n"]}